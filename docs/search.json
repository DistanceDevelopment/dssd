[{"path":"/articles/GettingStarted.html","id":"survey-design-for-distance-sampling","dir":"Articles","previous_headings":"","what":"Survey Design for Distance Sampling","title":"Getting Started with dssd","text":"--date copies vignettes can now found distance sampling examples page website: https://distancesampling.org/resources/vignettes.html Distance Sampling techniques provide design based estimates density abundance populations, accuracy estimates therefore relies valid survey design. process designing survey involves deciding required survey effort order achieve desired precision followed deciding exactly effort (lines points) located within survey region. proceeding design stage number considerations first need addressed. first steps conducting survey clearly define study population objectives study. addition, use spatial stratification improve precision also considered, ‘Multiple Strata dssd’ vignette details work multi-strata study regions. recommend consulting Buckland et al. (2001) chapter 7 Strindberg, Buckland, Thomas (2004) using dssd design distance sampling survey. defined population study objectives, estimated required effort, dssd (Marshall 2019a) can help ensure meet survey design assumptions associated distance sampling. Distance sampling assumes survey transects representative sample study region laid random respect population. dssd achieves objectives randomising locations transects. Designs may fully random transect randomly located independently transects systematic design random start point also meet assumption. next assumption point within study region equally likely sampled , call uniform coverage. can assess coverage across study region using grid points called coverage grid. designs uniform coverage others dssd can help assess uniform coverage via simulation. non-uniform coverage concern dssd can used conjunction DSsim (Marshall 2019b) distance sampling simulations package better assess effects non-uniform coverage normal worst case scenarios allow informed choice design.","code":""},{"path":"/articles/GettingStarted.html","id":"setting-up-the-region","dir":"Articles","previous_headings":"","what":"Setting up the Region","title":"Getting Started with dssd","text":"first step creating survey design set study region. easiest way using shapefile already created define study region. dssd package contains example shapefile used vignette can accessed using code . use shapefile define study region plot . Figure 1: study region.","code":"library(dssd) shapefile.name <- system.file(\"extdata\", \"TrackExample.shp\", package = \"dssd\") region <- make.region(region.name = \"study area\",                       shape = shapefile.name) plot(region)"},{"path":"/articles/GettingStarted.html","id":"creating-a-coverage-grid","dir":"Articles","previous_headings":"","what":"Creating a Coverage Grid","title":"Getting Started with dssd","text":"Ideally, coverage grid created separately creating design. coverage grid can used multiple designs. coverage grid passed design detected coverage simulation run grid 1000 points automatically generated.","code":"cover <- make.coverage(region,                        n.grid.points = 1000)"},{"path":"/articles/GettingStarted.html","id":"defining-the-design","dir":"Articles","previous_headings":"","what":"Defining the Design","title":"Getting Started with dssd","text":"dssd provides number point line transect designs. design refers description transect locations selected specify locations single set transects. later refer single set transects generated design survey. survey can thought single random realisation design. demonstrate systematic parallel line design. define desired effort 1300 km. Note line length units always region coordinate units. Usually edge effects line transect surveys minimal choose carry minus sampling, transects within survey region sampled. design angle parallel line designs 0 vertical lines moves round clockwise direction. left design angle 0 maximises number transects, study region larger x-dimension y-dimension. set truncation distance 2 km, maximum distance possible make detections used define covered area. covered area refers area study region sampled survey, set rectangles around line transects set circles around point transects clipped strata boundaries. rectangles circles overlap, areas overlap counted twice. means possible, sufficiently large truncation distance, sample 100% survey region.","code":"design <- make.design(region = region,                        design = \"systematic\",                       line.length = 1300,                       edge.protocol = \"minus\",                       design.angle = 0,                       truncation = 2,                       coverage.grid = cover)"},{"path":"/articles/GettingStarted.html","id":"generating-a-survey","dir":"Articles","previous_headings":"","what":"Generating a Survey","title":"Getting Started with dssd","text":"Now defined design check generated transects expect generating survey. can view statistics survey plot transects. Figure 2: example set transects generated design plotted within study region. can see survey effort line length 1346 km, close 1300 km asked . generated based spacing 9.26 km, value calculated based requested line length, resulted 21 transects. also given trackline length cyclic trackline lengths. trackline length sum lengths transects plus -effort transit time required complete survey beginning first transect end last transect. -effort transit distance calculated crow flies may longer reality transit required around lakes, islands coastlines etc. cyclic trackline length trackline length plus -effort transit distance required return end last transect beginning first transect. Please see appendix details figures. also told survey covers 43.9% study area. wish view covered area particular set transects can plot using code . covered area rectangles delineated black lines. Figure 3: example set transects generated design along covered area shown black rectangles around transects.","code":"transects <- generate.transects(design) transects ##  ##    Strata study area: ##    ___________________ ## Design:  systematically spaced parallel transects ## Spacing:  9.258935 ## Line length: 1346.139 ## Trackline length: 1536.667 ## Cyclic trackline length: 1722.431 ## Number of samplers:  21 ## Design angle:  0 ## Edge protocol:  minus ## Covered area:  5282.704 ## Strata coverage: 43.89% ## Strata area:  12036.62 ##  ##    Study Area Totals: ##    _________________ ## Line length: 1346.139 ## Trackline length: 1536.667 ## Cyclic trackline length: 1722.431 ## Number of samplers:  21 ## Covered area:  5282.704 ## Average coverage: 43.89% plot(region, transects) plot(region, transects, covered.area = TRUE)"},{"path":"/articles/GettingStarted.html","id":"assessing-coverage-uniformity-and-design-statistics","dir":"Articles","previous_headings":"","what":"Assessing Coverage Uniformity and Design Statistics","title":"Getting Started with dssd","text":"checked design appears correctly specified can assess uniform coverage also values total line length, trackline length cyclic trackline length vary across many surveys generated design. given single values statistics one survey important check potential surveys design can completed effort available, .e. maximum trackline/cyclic trackline length simulation achievable within limits study. permissible generate one set transects final survey select set shorter/longer trackline length selection transect locations longer purely random. Parallel line designs give uniform coverage across majority survey region. exception around edge study region using minus sampling, using . assess effects now via simulation generate 999 sets transects design. can now view coverage scores plotting design object. Figure 4: coverage grid plot indicates coverage fairly uniform majority study region. points around edge survey region lower coverage others due minus sampling protocol, however example expect effects non-uniform coverage study estimates small. coverage grid points lower coverage number represent small proportion study region area. can also look design statistics, shown . First given summary design, systematically spaced transects spacing selected achieve around 1300 km effort. lines placed design angle 0 minus sampling protocol used. told area study region, units region coordinates many times coverage simulation repeated. now move summary statistics 999 sets transects generated simulation. told survey 20 21 samplers minimum maximum covered areas 5051 5311 km^2 equate 42.0% 44.1% study area, respectively. minimum -effort line length 1268 km maximum -effort line length 1348 km, mean value close 1300km requested. given minimum, mean, median, maximum standard deviation values trackline cyclic trackline lengths. maximum values statistics used ensure set transects randomly generated design achievable total effort available given time financial constraints survey. Finally, given summary coverage score values. even coverage see little variation coverage scores. minimum coverage score 0.20 maximum 0.46 indicating small areas around edge study region (shown Figure 4) half likely sampled within main part study region. given indication variability coverage scores standard deviation provided may also useful plot histogram coverage scores, Figure 5. looks fairly reassuring parts study lower coverage represent significant proportion study area. However, wanted really thorough run simulation study using DSsim test worse case scenario, density areas lower coverage varied rest study region. worried non-uniform coverage cause significant bias switch plus sampling strategy. Figure 5: Histogram coverage scores","code":"design <- run.coverage(design, reps = 999) plot(design, subtitle = \"Systematic Parallel, line.length = 1300km\") ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() design ##  ##    Strata study area: ##    ___________________ ## Design:  systematically spaced transects ## Spacing:  NA ## Number of samplers:  NA ## Line length:  1300  (shared across strata) ## Design angle:  0 ## Edge protocol:  minus ##  ## Strata areas:  12037 ## Region and effort units:  km ## Coverage Simulation repetitions:  999 ##  ##     Number of samplers: ##      ##         study area Total ## Minimum       20.0  20.0 ## Mean          20.5  20.5 ## Median        20.0  20.0 ## Maximum       21.0  21.0 ## sd             0.5   0.5 ##  ##     Covered area: ##      ##         study area   Total ## Minimum    5050.77 5050.77 ## Mean       5147.14 5147.14 ## Median     5101.63 5101.63 ## Maximum    5310.94 5310.94 ## sd           90.43   90.43 ##  ##     % of region covered: ##      ##         study area Total ## Minimum      41.96 41.96 ## Mean         42.76 42.76 ## Median       42.38 42.38 ## Maximum      44.12 44.12 ## sd            0.75  0.75 ##  ##     Line length: ##      ##         study area   Total ## Minimum    1268.02 1268.02 ## Mean       1299.52 1299.52 ## Median     1282.34 1282.34 ## Maximum    1348.13 1348.13 ## sd           31.17   31.17 ##  ##     Trackline length: ##      ##         study area   Total ## Minimum    1450.50 1450.50 ## Mean       1485.09 1485.09 ## Median     1463.06 1463.06 ## Maximum    1538.98 1538.98 ## sd           35.32   35.32 ##  ##     Cyclic trackline length: ##      ##         study area   Total ## Minimum    1637.21 1637.21 ## Mean       1672.06 1672.06 ## Median     1649.37 1649.37 ## Maximum    1724.80 1724.80 ## sd           35.20   35.20 ##  ##     Coverage Score Summary: ## ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ##         study area      Total ## Minimum 0.19619620 0.19619620 ## Mean    0.42611584 0.42611584 ## Median  0.43243243 0.43243243 ## Maximum 0.45845846 0.45845846 ## sd      0.03585962 0.03585962 hist(get.coverage(design), xlab = \"Coverage Scores\", main = \"Histogram of Coverage Scores\")"},{"path":"/articles/GettingStarted.html","id":"exporting-transects","dir":"Articles","previous_headings":"","what":"Exporting transects","title":"Getting Started with dssd","text":"confident design meets survey objectives, ready generate final set transects use survey. ensure uniform coverage probability maintained must use first randomly generated transect set. Regenerating transects due inconvenient transect property (e.g. intersection island feature / many samplers) result non-uniform coverage must avoided. final set survey transects can exported number formats. demonstrate exporting coordinates shapefile csv file. See write.transects help file additional examples exporting .txt .gpx. example files written temporary directory, want replace file path name. can now navigate saved files view contents.","code":"# File destination - .txt file file.path <- paste0(tempdir(), \"/\", \"transects.txt\") # Write to .txt file write.transects(transects, dsn = file.path)   # File destination - .shp file file.path <- paste0(tempdir(), \"/\", \"transects.shp\") # Write to shapefile write.transects(transects, dsn = file.path) ## writing: substituting ENGCRS[\"Undefined Cartesian SRS with unknown unit\"] for missing CRS ## Writing layer `transects' to data source  ##   `C:\\Users\\erexs\\AppData\\Local\\Temp\\RtmpIvgDVU/transects.shp' using driver `ESRI Shapefile' ## Writing 21 features with 2 fields and geometry type Line String."},{"path":"/articles/GettingStarted.html","id":"appendix-trackline-and-cyclic-trackline-lengths","dir":"Articles","previous_headings":"","what":"Appendix: Trackline and Cyclic Trackline Lengths","title":"Getting Started with dssd","text":"following four figures (6 - 10) demonstrate trackline lengths cyclic trackline lengths calculated. red arrows indicate trackline path, moving start first transect along length across effort next transect end last transect reached. cyclic trackline length trackline length represented red arrows plus effort transit time required travel end last transect back beginning first indicated light blue arrow. values provided help assess efficiency design comparing -effort line length total trackline length also help ensure entire survey can completed within time budget constraints. Note trackline cyclic trackline lengths segmented designs calculated similar way parallel line transect designs. observer start beginning one segment move line segments crossing next line segments .","code":""},{"path":[]},{"path":"/articles/MultiStrataVignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Multiple Strata in dssd","text":"--date copies vignettes can now found distance sampling examples page website: https://distancesampling.org/resources/vignettes.html vignette assumes reader familiar topics covered getting started vignette. expands content, demonstrating use distance sampling survey design package, dssd (Marshall 2019) study region made multiple strata. vignette detail can select different designs (within design category, either lines points) stratum provide stratum specific design parameters. Please note examples provided vignette designed make reader aware possible inside dssd package designs necessarily something recommended example survey regions.","code":""},{"path":"/articles/MultiStrataVignette.html","id":"stratified-designs---why-stratify","dir":"Articles","previous_headings":"","what":"Stratified Designs - why stratify?","title":"Multiple Strata in dssd","text":"number reasons may wish create stratified design. Firstly, may efficiency reasons. example, may wish divide region number convex shapes using equal spaced zigzag design reduce -effort transit time survey region boundary. Figure 1 presents example Minke whale survey, left panel zigzag design generated study region whole can see fairly inefficient large distances ends transects (note lengths transect inside shaded study area surveyed). right panel reduced effort transit time dividing study area number strata. purpose stratification simply improve efficiency still want try achieve equal coverage across strata. Another reason people consider stratifying survey region improve precision. precise estimates density / abundance can sometimes achieved allocating effort areas high density less effort areas low density. allows inter-stratum differences estimated rather contribute variance estimates. Certainly, large areas expect see little might unwise spend lot expensive resources areas. However, dangers unequal effort allocation (otherwise called non-uniform coverage). may differences encounter rate, detection function mean cluster size across different strata. estimated pooling across strata fact differ strata within stratum estimates biased global estimates may also biased. way sure inter-stratum differences exist ensure sufficient data strata estimate encounter rate, detection function mean cluster size stratum. Otherwise need rely making biological assumptions. third scenario may want stratify wish make inference particular sub-region study area. addition, plan fitting spatial model distance sampling data may regions particular interest like detect changes density smaller scales regions. Finally may wish stratify plan survey two different platforms, example marine surveys strata surveyed ship others surveyed air. Ship-board surveys often use zigzag designs efficiency maximise -effort survey time. Ships sufficient space multiple sets observers ship board surveys can achieve continuous observation travelling along transects. contrast, aerial surveys often use systematic parallel line designs. Firstly tight turns end zigzags can hard achieve airplane (unpleasant crew) secondly time taken transit parallel transects can useful periods rest single set observers. Small Cetaceans European Atlantic North Sea II (SCANS II) strata designed implement mixed platform approach.","code":""},{"path":[]},{"path":"/articles/MultiStrataVignette.html","id":"equal-effort-designs","dir":"Articles","previous_headings":"Multi-Strata Designs using dssd","what":"Equal Effort Designs","title":"Multiple Strata in dssd","text":"survey design package assists equal effort allocation across strata allowing input single value either number samplers length line shared equally among strata. design systematic design used every strata dssd can calculate spacing value across strata can ensure even coverage. Alternatively, users can input single spacing value used strata. strategies lead equal effort possible across study region. may small differences strata depending design selected exact shapes different strata. designs vary across strata systematic spacing values sampler numbers must calculated stratum stratum basis may lead slightly larger differences coverage strata, differences can assessed inside dssd running coverage simulations. generally advisable run coverage simulations potential designs.","code":""},{"path":"/articles/MultiStrataVignette.html","id":"unequal-effort-designs","dir":"Articles","previous_headings":"Multi-Strata Designs using dssd","what":"Unequal Effort Designs","title":"Multiple Strata in dssd","text":"wish implement unequal effort design, can achieved number ways inside dssd. user can chose explicitly specify number samplers, line length design parameter values stratum individually. Alternatively, user can specify single value number samplers line length allocate effort stratum based proportions. effort allocation argument supplied default effort allocated based stratum area giving approximately equal coverage strata. Alternatively, user can instead specify effort allocation argument vector proportions one value per stratum sum 1. Effort allocated strata based proportions.","code":""},{"path":"/articles/MultiStrataVignette.html","id":"defining-the-study-area","dir":"Articles","previous_headings":"","what":"Defining the Study Area","title":"Multiple Strata in dssd","text":"First need load dssd library. study area can defined way single stratum study region providing shapefile. shapefile however contain multiple polygon features. first example study region used vignette one Danish coastal strata SCANS II survey, Figure 2. coastline study region border along east study area. study area divided two strata purposes maximising samplers keeping samplers roughly perpendicular coastline. design examples vignette treat strata entire study region parts separate strata. Note units shapefile metres design arguments relating distances must also provided metres. Figure 2: Plot example study area comprising 2 strata, northern stratum southern stratum Additional information manually create multi-strata study regions inside R can found ‘manual creation study areas’ appendix.","code":"library(dssd) shapefile.name <- system.file(\"extdata\", \"Strata.shp\", package = \"dssd\") region <- make.region(region.name = \"study.area\",                        strata.name = c(\"North\", \"South\"),                       shape = shapefile.name) plot(region)"},{"path":"/articles/MultiStrataVignette.html","id":"creating-a-coverage-grid","dir":"Articles","previous_headings":"","what":"Creating a Coverage Grid","title":"Multiple Strata in dssd","text":"coverage grid can created way single stratum study region. creation coverage grid involves creating single grid points entire study area unaffected region subdivided multiple strata, Figure 3. Figure 3: Coverage grid approximately 1000 grid points.","code":"cover <- make.coverage(region,                        n.grid.points = 1000) plot(region, cover, cex = 0.7)"},{"path":"/articles/MultiStrataVignette.html","id":"defining-the-design","dir":"Articles","previous_headings":"","what":"Defining the Design","title":"Multiple Strata in dssd","text":"section demonstrate number example designs show design, design angle, effort, edge sampling design parameters can varied across strata.","code":""},{"path":"/articles/MultiStrataVignette.html","id":"default-design-with-specified-design-angles","dir":"Articles","previous_headings":"Defining the Design","what":"Default Design (with specified design angles)","title":"Multiple Strata in dssd","text":"Similar single stratum regions, default design multi-strata regions 20 systematic parallel lines design angle 0 (.e. lines run perpendicular x-axis) using minus sampling edge protocol. spacing selected global level achieve total approximately 20 lines across strata. first example, leave default effort specify design angles mean parallel lines run roughly perpendicular coastline. survey therefore around 20 lines spacing North South strata. default design truncation distance 1 rarely applicable specified 2000 m. single survey generated design plotted Figure 4. Figure 4: Survey generated multi-strata default design stratum specific design angles. can also view summary survey shown Figure 4. output shown tells us dssd selected spacing around 17.9 km (17946.09 m) systematic parallel lines. strata used systematic design spacing values calculated globally identical strata. also tells us percentage study region covered around 22% strata particular survey achieved exactly 20 transects, 11 northern strata 9 southern strata.","code":"default.design <- make.design(region = region,                               transect.type = \"line\",                               design = \"systematic\",                               samplers = 20,                               design.angle = c(155, 90),                               edge.protocol = \"minus\",                               truncation = 2000,                                coverage.grid = cover) transects <- generate.transects(default.design) plot(region, transects, lwd = 0.8, col = \"blue\") transects ##  ##    Strata North: ##    ______________ ## Design:  systematically spaced parallel transects ## Spacing:  17946.09 ## Line length: 525341 ## Trackline length: 724166.8 ## Cyclic trackline length: 904116.6 ## Number of samplers:  11 ## Design angle:  155 ## Edge protocol:  minus ## Covered area:  2083756793 ## Strata coverage: 22.45% ## Strata area:  9280648398 ##  ##    Strata South: ##    ______________ ## Design:  systematically spaced parallel transects ## Spacing:  17946.09 ## Line length: 643553.8 ## Trackline length: 814796.6 ## Cyclic trackline length: 958365.9 ## Number of samplers:  9 ## Design angle:  90 ## Edge protocol:  minus ## Covered area:  2563013876 ## Strata coverage: 21.88% ## Strata area:  11716012130 ##  ##    Study Area Totals: ##    _________________ ## Line length: 1168895 ## Trackline length: 1538963 ## Cyclic trackline length: 1862483 ## Number of samplers:  20 ## Covered area:  4646770669 ## Average coverage: 22.13%"},{"path":"/articles/MultiStrataVignette.html","id":"vary-design-by-stratum","dir":"Articles","previous_headings":"Defining the Design","what":"Vary design by stratum","title":"Multiple Strata in dssd","text":"Within categories line point transect designs, different types design may selected stratum. use equally spaced zigzag design northern stratum systematic parallel line southern stratum. Note design angle different definition zigzag designs parallel line designs first value modified 65 degrees (right angles parallel line design ). maximise efficiency zigzag design specify bounding shape stratum convex hull. Note bounding shape used systematic parallel line design second value bounding shape argument NA. design also explicitly declares edge protocol minus sampling, applied strata. effort design supplied single line length defined effort allocation total line length 1200 km (1200000 m) shared among strata based areas. example survey generated design shown Figure 5. Figure 5: Example survey mixed-type design systematic parallel lines southern strata equal spaced zigzag designs northern strata. Let us now run coverage check design see coverage roughly strata. Looking Figure 6 coverage probabilities look roughly average two strata. however see sharp corners northern stratum displaying higher coverage due zigzag design generated convex hull. Figure 6: plot coverage scores mixed type design, based generation 500 surveys design. can also look design statistics 1000 surveys generated, displayed . can see multiple strata example now given stratum-specific statistics well values study region whole Total columns. can see strata areas information southern strata slightly bigger northern strata also looking covered area table see covered area larger southern strata. look % region covered statistics see coverage approximately strata, percentage covered 22.09% northern stratum 22.67% southern stratum.","code":"design <- make.design(region = region,                               transect.type = \"line\",                               design = c(\"eszigzag\", \"systematic\"),                               line.length = 1200000,                               design.angle = c(65, 90),                               bounding.shape = c(\"convex.hull\", NA),                               edge.protocol = \"minus\",                               truncation = 2000,                               coverage.grid = cover) transects <- generate.transects(design) plot(region, transects, lwd = 0.8, col = \"blue\") design <- run.coverage(design, reps = 1000) plot(design) ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() design ##  ##    Strata North: ##    ______________ ## Design:  equal spaced zigzag ## Spacing:  NA ## Number of samplers:  NA ## Line length:  1200000  (shared across strata) ## Design angle:  65 ## Edge protocol:  minus ##  ##    Strata South: ##    ______________ ## Design:  systematically spaced transects ## Spacing:  NA ## Number of samplers:  NA ## Line length:  1200000  (shared across strata) ## Design angle:  90 ## Edge protocol:  minus ##  ## Strata areas:  9280648398, 11716012130 ## Region and effort units:  m ## Coverage Simulation repetitions:  1000 ##  ##     Number of samplers: ##      ##         North South Total ## Minimum   9.0   9.0  18.0 ## Mean     10.7   9.5  20.2 ## Median   11.0  10.0  20.0 ## Maximum  12.0  10.0  22.0 ## sd        0.6   0.5   0.8 ##  ##     Covered area: ##      ##              North      South      Total ## Minimum 1955116049 2513421503 4481285619 ## Mean    2049652296 2656340209 4705992505 ## Median  2070366837 2670394472 4713693428 ## Maximum 2091766860 2782781204 4870589559 ## sd        36486449   82822551   91678794 ##  ##     % of region covered: ##      ##         North South Total ## Minimum 21.07 21.45 21.34 ## Mean    22.09 22.67 22.41 ## Median  22.31 22.79 22.45 ## Maximum 22.54 23.75 23.20 ## sd       0.39  0.71  0.44 ##  ##     Line length: ##      ##            North     South      Total ## Minimum 497407.9 631156.05 1128751.83 ## Mean    521716.3 669307.22 1191023.50 ## Median  525731.8 670981.00 1192041.07 ## Maximum 535469.7 706157.31 1239785.11 ## sd        9013.4  23011.45   24965.31 ##  ##     Trackline length: ##      ##             North     South      Total ## Minimum 512691.24 798122.48 1311004.79 ## Mean    538759.40 846771.69 1385531.09 ## Median  541724.36 856097.28 1392394.59 ## Maximum 550794.04 891391.01 1440740.61 ## sd        8958.67  31339.93   32758.02 ##  ##     Cyclic trackline length: ##      ##             North      South      Total ## Minimum 683046.12  938100.75 1621340.14 ## Mean    722453.73 1005787.30 1728241.03 ## Median  727656.40 1031911.48 1741506.91 ## Maximum 737260.78 1066109.12 1801958.77 ## sd       13922.31   47925.48   50049.89 ##  ##     Coverage Score Summary: ## ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ##             North      South      Total ## Minimum 0.0870000 0.12000000 0.08700000 ## Mean    0.2201493 0.22586538 0.22337377 ## Median  0.2190000 0.22300000 0.22200000 ## Maximum 0.3910000 0.27000000 0.39100000 ## sd      0.0309947 0.02553877 0.02817631"},{"path":"/articles/MultiStrataVignette.html","id":"segmented-line-design","dir":"Articles","previous_headings":"Defining the Design","what":"Segmented Line Design","title":"Multiple Strata in dssd","text":"example uses segmented grid design demonstrate design parameters can varied across strata. example spacing, segment length segment threshold values specified explicitly strata. northern stratum segments 5km length separated 10km. segment threshold 50 means segments less 50% segment length (.e. 2.5km) discarded. southern stratum segments 12km separated 20km retain segments matter short (segment threshold 0). example survey design shown Figure 7. Figure 7: single survey generated segmented grid design different design parameters stratum. can look coverage scores examine coverage two strata. observe average coverage higher northern stratum southern stratum spacing half large northern stratum, Figure 8. Figure 8: Coverage scores plotted segmented grid design differences average coverage strata sometimes difficult visualise non-uniform coverage within strata. survey design package also provides functionality view coverage score plot individual strata, Figures 9 10. minor edge effects northern stratum apparent study area plotted whole, Figure 8, edge effects southern stratum detectable plot. However, can see Figure 10 edge effects southern stratum also small comparison stratum area. Figure 9: Coverage scores plotted northern stratum Figure 10: Coverage scores plotted southern stratum","code":"design <- make.design(region = region,                       transect.type = \"line\",                       design = \"segmentedgrid\",                       spacing = c(10000,20000),                       seg.length = c(5000,12000),                       design.angle = c(150, 90),                       seg.threshold = c(50,0),                        edge.protocol = \"minus\",                       truncation = 3000,                       coverage.grid = cover) transects <- generate.transects(design) plot(region, transects, lwd = 0.8, col = \"blue\") design <- run.coverage(design, reps = 1000) plot(design) ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() plot(design, strata.id = 1, subtitle = \"Coverage Northern Strata\") ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() plot(design, strata.id = 2, subtitle = \"Coverage Southern Strata\") ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs() ## old-style crs object detected; please recreate object with a recent sf::st_crs()"},{"path":"/articles/MultiStrataVignette.html","id":"point-transect-design","dir":"Articles","previous_headings":"Defining the Design","what":"Point transect design","title":"Multiple Strata in dssd","text":"point transect example use different study region. area forest Scotland Dundee St Andrews made two strata, Figure 11. region projected first need project study area onto flat plane. Figure 11: Study region depicting area forest Dundee St Andrews Scotland. comprises main stratum Morton Loch stratum forms part nature reserve area. Point transect designs point transect design parameters can varied across strata way line transect designs. use systematic grid point main Morton Lochs strata. specify approximately 80 samplers across strata like 25% effort allocated Morton Lochs strata 75% main strata. Morton Lochs strata small area prone edge effects use plus sampling strategy. Figure 12 shows one possible realisation design. Figure 12: example multi strata point transect survey. can also look statistics particular survey. output shows although set effort 80 samplers total 92. see expected number main stratum 75% 80 60 samplers, see expected Morton Lochs stratum, 32 rather 20. fact using plus sampling edge protocol stratum check Figure 12 see approximately 20 points actually fall inside Morton Lochs stratum. additional effort required plus sampling strategy something aware costing survey.","code":"#Load the unprojected shapefile library(sf) ## Linking to GEOS 3.13.1, GDAL 3.10.2, PROJ 9.5.1; sf_use_s2() is TRUE shapefile.name <- system.file(\"extdata\", \"TentsmuirUnproj.shp\", package = \"dssd\") sf.shape <- read_sf(shapefile.name) # Define a European Albers Equal Area projection proj4string <- \"+proj=aea +lat_1=56 +lat_2=62 +lat_0=50 +lon_0=-3 +x_0=0                  +y_0=0 +ellps=intl +units=m\" # Project the study area on to a flat plane projected.shape <- st_transform(sf.shape, crs = proj4string) # Create the survey region in dssd region.tm <- make.region(region.name = \"Tentsmuir\",                          strata.name = c(\"Main Area\", \"Morton Lochs\"),                          shape = projected.shape) # Plot the survey region plot(region.tm, legend.params = list(inset = c(-0.3,0))) ## Warning: legend.params argument is deprecated since version 0.2.3 #Create a coverage grid cover.tm <- make.coverage(region.tm, n.grid.points = 500) design.tm <- make.design(region = region.tm,                       transect.type = \"point\",                       design = \"systematic\",                       samplers = 80,                       effort.allocation = c(0.75,0.25),                        edge.protocol = c(\"minus\",\"plus\"),                       truncation = 100,                       coverage.grid = cover.tm) transects.tm <- generate.transects(design.tm) plot(region.tm, transects.tm, lwd = 0.8, col = \"blue\") transects.tm ##  ##    Strata Main Area: ##    __________________ ## Design:  systematically spaced transects ## Spacing:  484.9165 ## Number of samplers:  60 ## Design angle:  0 ## Edge protocol:  minus ## Covered area:  1842894 ## Strata coverage: 13.06% ## Strata area:  14108643 ##  ##    Strata Morton Lochs: ##    _____________________ ## Design:  systematically spaced transects ## Spacing:  189.1117 ## Number of samplers:  32 ## Design angle:  0 ## Edge protocol:  plus ## Covered area:  630454.5 ## Strata coverage: 88.14% ## Strata area:  715264.9 ##  ##    Study Area Totals: ##    _________________ ## Number of samplers:  92 ## Effort allocation: 75%, 25% ## Covered area:  2473348 ## Average coverage: 16.68%"},{"path":[]},{"path":"/articles/MultiStrataVignette.html","id":"a--manual-creation-of-multiple-strata-study-areas","dir":"Articles","previous_headings":"Appendices","what":"A. Manual creation of multiple strata study areas","title":"Multiple Strata in dssd","text":"Example creating study region manually. example code taken help file ‘sf::st_multipolygon’. create sf polygon multipolygon, create one matrices coordinates representing outer polygons holes. multipolygons outer polygons holes defined placement within list element, first matrix list element outer polygon following matrices holes. following example polygons considered strata. Figure 13: single study region multiple polygon parts. instead wanted create 3 separate polygons 3 distinct strata use following code: Figure 14: single study region multiple polygon parts. separate strata.","code":"outer <- matrix(c(0,0,15,0,15,10,0,10,0,0),ncol=2, byrow=TRUE) hole1 <- matrix(c(2,2,2,3,3,3,3,2,2,2),ncol=2, byrow=TRUE) hole2 <- matrix(c(5,5,5,6,7,6,8,5.5,7,5,5,5),ncol=2, byrow=TRUE) pol1 <- list(outer, hole1*1.5, hole2) pol2 <- list(outer + 15, hole2*1.5 + 12) pol3 <- list(outer + 30, hole2*2.5 + 20) mp <- list(pol1,pol2,pol3) mp1 <- sf::st_multipolygon(mp)  region <- make.region(region.name = \"study.area\", shape = mp1) plot(region) outer <- matrix(c(0,0,15,0,15,10,0,10,0,0),ncol=2, byrow=TRUE) hole1 <- matrix(c(2,2,2,3,3,3,3,2,2,2),ncol=2, byrow=TRUE) hole2 <- matrix(c(5,5,5,6,7,6,8,5.5,7,5,5,5),ncol=2, byrow=TRUE) pol1 <- sf::st_polygon(list(outer, hole1*1.5, hole2)) pol2 <- sf::st_polygon(list(outer + 15, hole2*1.5 + 12)) pol3 <- sf::st_polygon(list(outer + 30, hole2*2.5 + 20)) sfc <- sf::st_sfc(pol1,pol2,pol3) strata.names <- c(\"SW\", \"central\", \"NE\") mp1 <- sf::st_sf(strata = strata.names, geom = sfc)  region <- make.region(region.name = \"study.area\",                        strata.name = strata.names,                        shape = mp1) plot(region)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laura Marshall. Author, maintainer. Rexstad Eric. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marshall L (2025). dssd: Distance Sampling Survey Design. R package version 1.0.3.","code":"@Manual{,   title = {dssd: Distance Sampling Survey Design},   author = {Laura Marshall},   year = {2025},   note = {R package version 1.0.3}, }"},{"path":[]},{"path":"/index.html","id":"distance-sampling-survey-design","dir":"","previous_headings":"","what":"Distance Sampling Survey Design","title":"Distance Sampling Survey Design","text":"dssd package designing distance sampling surveys. provides number designs including systematic point transect, parallel line transect, zigzag line transect segment line transect designs.","code":""},{"path":"/index.html","id":"using-dssd","dir":"","previous_headings":"","what":"Using dssd","title":"Distance Sampling Survey Design","text":"two vignettes within dssd package help get started using dssd: - GettingStarted: “Getting Started dssd” - MultiStrataVignette: “Multiple Strata dssd”","code":""},{"path":"/index.html","id":"getting-dssd","dir":"","previous_headings":"","what":"Getting dssd","title":"Distance Sampling Survey Design","text":"easiest way get dssd install CRAN within R-studio R interface. endeavour make new functionality available CRAN timely manor. However, wish download development version latest updates immediately can using Hadley Wickham’s devtools package: install dssd github:","code":"# First, ensure you have a copy of the `devtools` package:   if (!nzchar(system.file(package = \"devtools\"))) install.packages(\"devtools\") library(devtools)   install_github(\"DistanceDevelopment/dssd\", build_vignettes = TRUE)"},{"path":"/index.html","id":"troubleshooting-tip","dir":"","previous_headings":"","what":"Troubleshooting tip","title":"Distance Sampling Survey Design","text":"installation packages, may get message “packages recent versions available. recommended update . like update?” list packages. recommend typically choose option “CRAN packages ”. Note may get message packages installed already loaded. case, solution may note packages , open R console (rather R Studio) use Packages | Update packages menu option (update.packages function) update packages.","code":""},{"path":"/reference/calculate.effort.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey effort for distance sampling — calculate.effort","title":"Survey effort for distance sampling — calculate.effort","text":"Computes predicted required survey effort achieve range target CV's (coefficient variation) values given pilot survey information. information displayed plot number cv.values greater equal 5. plot values target CV versus effort returned data.frame (invisibly 5 CV values).","code":""},{"path":"/reference/calculate.effort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey effort for distance sampling — calculate.effort","text":"","code":"calculate.effort(   L0,   n0,   q = 3,   line.point = \"line\",   cv.values = seq(0.075, 0.3, length = 100) )"},{"path":"/reference/calculate.effort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survey effort for distance sampling — calculate.effort","text":"L0 effort deployed pilot study (line length number points) n0 number detections pilot study q approximate variance density pilot study. Default value 3. line.point switch indicating whether intended survey line point cv.values CV values wish function calculate effort . Defaults range 100 values 0.075 0.3.","code":""},{"path":"/reference/calculate.effort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survey effort for distance sampling — calculate.effort","text":"Plots target cv vs effort (length cv.values >= 5) Returns data.frame (invisibly length cv.values >= 5) containing two fields L - effort, either length line transect number points cv - precision (cv) expected given effort","code":""},{"path":"/reference/calculate.effort.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survey effort for distance sampling — calculate.effort","text":"Horizontal vertical lines added plot approximately every 0.1 CV interval. exact values displayed closest point equal values next smallest CV value corresponding effort data.frame. Computations based formulas points lines found Section 2.4.2 Buckland et al. (2015).","code":""},{"path":"/reference/calculate.effort.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survey effort for distance sampling — calculate.effort","text":"Buckland, S. T., Rexstad, E. ., Marques, T. ., & Oedekoven, C. S. (2015). Distance Sampling: Methods Applications. Springer International Publishing. https://doi.org/10.1007/978-3-319-19219-2","code":""},{"path":"/reference/calculate.effort.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Survey effort for distance sampling — calculate.effort","text":"Eric Rexstad (aut), Laura Marshall (ctb)","code":""},{"path":"/reference/calculate.effort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey effort for distance sampling — calculate.effort","text":"","code":"# Line transect pilot survey with 20 sightings on a line of length # 5 units. calculate.effort(L0 = 5, n0 = 20)   # Point transect pilot with 20 sightings over 5 points calculate.effort(L0 = 5, n0 = 20, line.point=\"point\")  # To find a single value for a target CV of 0.15 calculate.effort(L0 = 5, n0 = 20, line.point=\"point\", cv.values = 0.15) #>     Effort   CV #> 1 33.33333 0.15"},{"path":"/reference/Coverage.Grid-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Coverage.Grid\" S4 class containing descriptions grid used assess coverage scores different designs.","code":""},{"path":"/reference/Coverage.Grid-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"grid sf multipoint object spacing spacing used create coverage grid","code":""},{"path":"/reference/Coverage.Grid-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form make.grid(region = make.region(), .points = 1000, spacing = numeric(0)","code":""},{"path":"/reference/Coverage.Grid-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"plot signature(x = \"Coverage.Grid\", y = \"missing\"): plots  grid points.","code":""},{"path":"/reference/dssd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Sampling Survey Design (dssd) — dssd-package","title":"Distance Sampling Survey Design (dssd) — dssd-package","text":"Creates survey designs distance sampling surveys.  designs can assessed various effort coverage statistics.  user satisfied design characteristics can  generate set transects use distance sampling survey.  Many designs implemented R package first made  available 'Distance' Windows software detailed  Chapter 7 Advanced Distance Sampling, Buckland et. al. (2008,  ISBN-13: 978-0199225873).","code":""},{"path":"/reference/dssd-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance Sampling Survey Design (dssd) — dssd-package","text":"main functions package : make.region, make.design, generate.transects run.coverage. See also write.transects examples export surveys generated dssd. information distance sampling methods example code available https://distancesampling.org. Also see website vignettes / example code https://distancesampling.org/resources/vignettes.html. help distance sampling package, Google Group https://groups.google.com/forum/#!forum/distance-sampling.","code":""},{"path":"/reference/dssd-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance Sampling Survey Design (dssd) — dssd-package","text":"Laura Marshall <lhm@st-.ac.uk>","code":""},{"path":"/reference/generate.transects-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 generic method to generate an instance of a design — generate.transects","title":"S4 generic method to generate an instance of a design — generate.transects","text":"Uses survey design details design class generate set transects, .e. single survey.","code":""},{"path":"/reference/generate.transects-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 generic method to generate an instance of a design — generate.transects","text":"","code":"generate.transects(object, quiet = FALSE, ...)  # S4 method for class 'Line.Transect.Design' generate.transects(object, quiet = FALSE, ...)  # S4 method for class 'Point.Transect.Design' generate.transects(object, quiet = FALSE, ...)"},{"path":"/reference/generate.transects-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 generic method to generate an instance of a design — generate.transects","text":"object object inherits class Survey.Design quiet TRUE silences warnings ... optional arguments used internal calls","code":""},{"path":"/reference/generate.transects-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 generic method to generate an instance of a design — generate.transects","text":"object class Transect","code":""},{"path":"/reference/generate.transects-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"S4 generic method to generate an instance of a design — generate.transects","text":"transects returned within object class Transect records design options used generate along samplers sf object class 'POINT' 'LINESTRING'/'MULTILINESTRING'. Transect object also contains covered areas 'POLYGON' 'MULTIPOLYGON' sf object.","code":""},{"path":[]},{"path":"/reference/generate.transects-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 generic method to generate an instance of a design — generate.transects","text":"L Marshall","code":""},{"path":"/reference/generate.transects-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S4 generic method to generate an instance of a design — generate.transects","text":"","code":"#Point transect example shapefile.name <- system.file(\"extdata\", \"TrackExample.shp\", package = \"dssd\") region <- make.region(region.name = \"study area\",                      shape = shapefile.name) design <- make.design(region = region,                       transect.type = \"point\",                       design = \"random\",                       samplers = 25,                       design.angle = 45,                       edge.protocol = \"minus\",                       truncation = 3) # Generate a single survey instance survey <- generate.transects(design) plot(region, survey, covered.area = TRUE)   #Line transect example # Define the design design <- make.design(region = region,                       transect.type = \"line\",                       design = c(\"systematic\"),                       line.length = 1000,                       design.angle = c(179),                       edge.protocol = \"minus\",                       truncation = 1)  # Create a single set of transects to check survey <- generate.transects(design) plot(region, survey, covered.area = TRUE)"},{"path":"/reference/get.area-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the area of the region — get.area","title":"Returns the area of the region — get.area","text":"Returns area region","code":""},{"path":"/reference/get.area-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the area of the region — get.area","text":"","code":"get.area(object)  # S4 method for class 'Region' get.area(object)"},{"path":"/reference/get.area-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the area of the region — get.area","text":"object object class Region","code":""},{"path":"/reference/get.area-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the area of the region — get.area","text":"numeric value specifying area region","code":""},{"path":"/reference/get.coverage-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 generic method to extract coverage scores — get.coverage","title":"S4 generic method to extract coverage scores — get.coverage","text":"Obtains coverage scores survey design object.","code":""},{"path":"/reference/get.coverage-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 generic method to extract coverage scores — get.coverage","text":"","code":"get.coverage(object, strata.id = \"all\")  # S4 method for class 'Survey.Design' get.coverage(object, strata.id = \"all\")"},{"path":"/reference/get.coverage-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 generic method to extract coverage scores — get.coverage","text":"object object inherits class Survey.Design strata.id either \"\" numeric value indicating strata index.","code":""},{"path":"/reference/get.coverage-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 generic method to extract coverage scores — get.coverage","text":"vector coverage scores","code":""},{"path":"/reference/get.coverage-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"S4 generic method to extract coverage scores — get.coverage","text":"See ?make.design example code","code":""},{"path":[]},{"path":"/reference/Line.Transect-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Line.Transect\" S4 class detailing set transects point transect design.","code":""},{"path":"/reference/Line.Transect-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"line.length total line length transect set trackline total effort trackline length start first transect end last cyclictrackline trackline distance plus distance required return end last transect beginning first","code":""},{"path":[]},{"path":"/reference/Line.Transect.Design-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Line.Transect.Design\" S4 class detailing type line transect design.","code":""},{"path":"/reference/Line.Transect.Design-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"line.length Numeric value defining total line length generated (may multiple values relating stratum). bounding.shape relevant zigzag designs, either minimum bounding \"rectangle\" \"convex.hull\".","code":""},{"path":"/reference/Line.Transect.Design-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"generate.transects signature=(object = \"Line.Transect.Design\", quiet = FALSE, ...):  generates set transects design.","code":""},{"path":[]},{"path":"/reference/make.coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Coverage.Grid object — make.coverage","title":"Creates a Coverage.Grid object — make.coverage","text":"creates instance Coverage.Grid class.","code":""},{"path":"/reference/make.coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Coverage.Grid object — make.coverage","text":"","code":"make.coverage(   region = make.region(),   spacing = numeric(0),   n.grid.points = 1000 )"},{"path":"/reference/make.coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Coverage.Grid object — make.coverage","text":"region region name spacing spacing used create coverage grid. spacing specified value supplied n.grid.points ignored. n.grid.points desired number grid points (note exact number generated may differ slightly depending shape study region).","code":""},{"path":"/reference/make.coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Coverage.Grid object — make.coverage","text":"object class Coverage.Grid","code":""},{"path":"/reference/make.coverage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a Coverage.Grid object — make.coverage","text":"Laura Marshall","code":""},{"path":"/reference/make.coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Coverage.Grid object — make.coverage","text":"","code":"# Fast running example, please note to more accurately assess coverage # the spacing should be reduced. Spacings of between 20 and 50 will allow # a better assessment of coverage to be achieved. region <- make.region() cover <- make.coverage(region, spacing = 250) plot(region, cover)"},{"path":"/reference/make.design.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Survey.Design object — make.design","title":"Creates a Survey.Design object — make.design","text":"Creates description survey design. Designs may use different types either point line transect designs across strata mix point line transect design types within single design object.","code":""},{"path":"/reference/make.design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Survey.Design object — make.design","text":"","code":"make.design(   region = make.region(),   transect.type = \"line\",   design = \"systematic\",   samplers = numeric(0),   line.length = numeric(0),   seg.length = numeric(0),   effort.allocation = numeric(0),   design.angle = 0,   spacing = numeric(0),   edge.protocol = \"minus\",   seg.threshold = numeric(0),   bounding.shape = \"rectangle\",   truncation = 50,   coverage.grid = NULL )"},{"path":"/reference/make.design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Survey.Design object — make.design","text":"region object class Region defining survey region. transect.type character variable specifying either \"line\" \"point\" design character variable describing type design. Either \"random\", \"systematic\", \"eszigzag\" (equal-spaced zigzag), \"eszigzagcom\" (equal spaced zigzag complementary lines) \"segmentedgrid\". See details information. samplers number samplers wish design generate (note number actually generated may differ slightly due shape study region designs). may one value value stratum. line.length total line length desire vector line lengths length number strata. seg.length length line transect segments segmented grid design. effort.allocation Used multi-strata regions total effort value provided. numeric argument one value per stratum indicating proportion total effort allocate stratum. length 0 (default) total line length total number samplers supplied, effort allocated based stratum area. design.angle numeric value detailing angle design. Can provide multiple values relating strata. use angle varies design, can either angle grid points, angle lines design axis zigzag design. See details. addition, value -1 cause random design angle generated. spacing used systematic designs, numeric value(s) define spacing transects. Can vector values one value per stratum. edge.protocol character value indicating whether \"plus\" sampling \"minus\" sampling protocol used. See details. seg.threshold percentage threshold value applicable segmented grid designs controlling partial segments discarded around survey region boundary. default, value 50, means segments half inside survey region retained. retain segments, matter small clipped survey region boundary set value 0. bounding.shape applicable zigzag designs. character value saying whether zigzag transects generated using minimum bounding \"rectangle\" \"convex.hull\". default minimum bounding rectangle. truncation single numeric value describing longest distance object may observed. Truncation distance constant across strata. coverage.grid object class Coverage.Grid use running coverage simulation.","code":""},{"path":"/reference/make.design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Survey.Design object — make.design","text":"object class inherits class Survey.Design either Line.Transect.Design Point.Transect.Design","code":""},{"path":"/reference/make.design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a Survey.Design object — make.design","text":"Plus versus Minus Sampling choose design use minus sampling strategy transects generated within survey region give lower coverage around edge survey region. Plus sampling generates transects within area greater study region. dssd first puts buffer around study region generating transects within buffered region. width buffer truncation distance supplies user. Plus sampling helps ensure even coverage around edge study area. See Buckland et. al, 2001 \"Introduction Distance Sampling\" information use plus versus minus sampling. Point Transect Designs point transect designs user may either specify \"random\" \"systematic\" design argument. user specifies \"random\", also provide value effort detailing number point transects wish survey . stratified designs may specify vector numbers detailing number transects per strata alternatively use effort.allocation argument allocate total effort amount proportionally. effort.allocation left blank effort allocated according strata area. user specified\"systematic\" may either provide desired number samplers value spacing defines gap points (vector spacing values can provided strata). Optionally user may select design.angle. random systematic point transect designs user may select either minus plus sampling edge protocol. Line Transect Designs: line transect designs user may either specify \"random\" (randomly placed full width lines), \"systematic\" (systematically placed full width lines), \"eszigzag\" (equally spaced zigzag lines), \"eszigzagcom\" (two sets complementary equally spaced zigzag lines) \"segmentedgrid\" (grid short line transect segments). Note users may also select \"segmentedtrack\" design dssd generate transects design. addition made simulations can run Distance Windows using design. case, transect shapefiles generated Distance Windows use simulation. dssd provides design option allow design specifications stored within simulation. user specifies \"random\" design, provide either number samplers wish design generate line length wish achieve, either strata total. user specifies \"systematic\" specify either number samplers, desired line length spacing lines. design angle parallel line designs refers angle lines 0 vertical line moving round clockwise direction. user specifies zigzag design specify systematic spacing value, number samplers line length used choose generating design minimum bounding rectangle convex hull. default minimum bounding rectangle gives even coverage convex hull generally efficient. segmented grid design may generated using either number samplers total line length, combined value segment length. Alternatively user may specify values spacing segment length. segmented grid design also uses segment threshold argument. designs may generated using plus minus sampling protocols. Similar point transect designs different values may specified strata options. design angle zigzag designs refers angle line run middle zigzag transect zigzags generated within rectangle. design angle zigzags usually run along longest dimension study region. segmented trackline design requires specified values segmented grid design. NOTE: multiple global design effort arguments supplied (.e. spacing, samplers, line.length) first spacing line.length number samplers used. values provided discarded. Different design effort arguments may supplied different strata. achieved supplying vectors numeric values desired effort measures, 1 value stratum. value indicates effort stratum NA's used ensure one measure effort defined stratum. Effort Allocation: multi-strata designs users able define single global effort value, example number samplers line length, allocate proportions stratum using effort.allocation argument. global effort value supplied effort.allocation defined effort assigned based stratum area. lead design least approximately equal effort across strata. case strata use systematic design absence effort.allocation spacing calculated globally exactly equal effort achieved. case different designs chosen different strata non-systematic design selected effort spacing values calculated stratum level can lead variations coverage strata. See Getting Started Vignette Multiple Strata dssd Vignette example designs.","code":""},{"path":"/reference/make.design.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a Survey.Design object — make.design","text":"Laura Marshall","code":""},{"path":"/reference/make.design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Survey.Design object — make.design","text":"","code":"#Point transect example shapefile.name <- system.file(\"extdata\", \"TrackExample.shp\", package = \"dssd\") region <- make.region(region.name = \"study area\",                      shape = shapefile.name)  # \\donttest{ # Generate coverage grid (spacing quite sparse for speed) cover <- make.coverage(region,                        n.grid.points = 250)  # Define design design <- make.design(region = region,                       transect.type = \"point\",                       design = \"random\",                       samplers = 25,                       design.angle = 45,                       edge.protocol = \"minus\",                       truncation = 3,                       coverage.grid = cover)  # Generate a single survey instance survey <- generate.transects(design) plot(region, survey, covered.area = TRUE)   # Note, the number of reps here has been set to 5 to avoid lengthy run-times, # however, the reps should be at least 100 for an idea of design statistics # (i.e. trackline lengths) and 500 + to give a good odea of coverage. design <- run.coverage(design, reps = 5) #>    20% complete        #>    40% complete        #>    60% complete        #>    80% complete        #>    100% complete        # Plot the coverage plot(design)  # Display the design statistics design #>  #>    Strata study area: #>    ___________________ #> Design:  randomly located transects #> Number of samplers:  25  (shared across strata) #> Design angle:  45 #> Edge protocol:  minus #>  #> Strata areas:  12037 #> Coverage Simulation repetitions:  5 #>  #>     Number of samplers: #>      #>         study area Total #> Minimum         25    25 #> Mean            25    25 #> Median          25    25 #> Maximum         25    25 #> sd               0     0 #>  #>     Covered area: #>      #>         study area  Total #> Minimum     667.76 667.76 #> Mean        684.59 684.59 #> Median      684.38 684.38 #> Maximum     702.79 702.79 #> sd           13.57  13.57 #>  #>     % of region covered: #>      #>         study area Total #> Minimum       5.55  5.55 #> Mean          5.69  5.69 #> Median        5.69  5.69 #> Maximum       5.84  5.84 #> sd            0.11  0.11 #>  #>     Coverage Score Summary: #>      #>         study area      Total #> Minimum 0.00000000 0.00000000 #> Mean    0.05390625 0.05390625 #> Median  0.00000000 0.00000000 #> Maximum 0.40000000 0.40000000 #> sd      0.10657031 0.10657031 #Extract coverage scores coverage.scores <- get.coverage(design) hist(coverage.scores)   #Multi-strata line transect example shapefile.name <- system.file(\"extdata\", \"AreaRProjStrata.shp\", package = \"dssd\") region <- make.region(region.name = \"study area\",                      strata.name = c(\"North\", \"NW\", \"West Upper\",                                      \"West Lower\", \"SW\", \"South\"),                      shape = shapefile.name) plot(region)  # Make a coverage grid cover <- make.coverage(region,                        n.grid.points = 500) # Define the design design <- make.design(region = region,                       transect.type = \"line\",                       design = c(\"systematic\", \"systematic\",                                  \"eszigzag\", \"systematic\",                                  \"systematic\", \"eszigzagcom\"),                       line.length = 5000*1000, #5000km x 1000m (projection in m)                       design.angle = c(160, 135, 170, 135, 50, 60),                       edge.protocol = \"minus\",                       truncation = 3000,                       coverage.grid = cover)  # Create a single set of transects to check survey <- generate.transects(design) plot(region, survey, covered.area = TRUE)   # Note, the number of reps here has been set to 5 to avoid lengthy run-times, # however, the reps should be at least 100 for an idea of design statistics # (i.e. trackline lengths) and 500 + to give a good odea of coverage. design <- run.coverage(design, reps = 5) #>    20% complete        #>    40% complete        #>    60% complete        #>    80% complete        #>    100% complete        # Plot the coverage plot(design)  # Display the design statistics design #>  #>    Strata North: #>    ______________ #> Design:  systematically spaced transects #> Spacing:  NA #> Number of samplers:  NA #> Line length:  5e+06  (shared across strata) #> Design angle:  160 #> Edge protocol:  minus #>  #>    Strata NW: #>    ___________ #> Design:  systematically spaced transects #> Spacing:  NA #> Number of samplers:  NA #> Line length:  5e+06  (shared across strata) #> Design angle:  135 #> Edge protocol:  minus #>  #>    Strata West Upper: #>    ___________________ #> Design:  equal spaced zigzag #> Spacing:  NA #> Number of samplers:  NA #> Line length:  5e+06  (shared across strata) #> Design angle:  170 #> Edge protocol:  minus #>  #>    Strata West Lower: #>    ___________________ #> Design:  systematically spaced transects #> Spacing:  NA #> Number of samplers:  NA #> Line length:  5e+06  (shared across strata) #> Design angle:  135 #> Edge protocol:  minus #>  #>    Strata SW: #>    ___________ #> Design:  systematically spaced transects #> Spacing:  NA #> Number of samplers:  NA #> Line length:  5e+06  (shared across strata) #> Design angle:  50 #> Edge protocol:  minus #>  #>    Strata South: #>    ______________ #> Design:  complementaty equal spaced zigzags #> Spacing:  NA #> Number of samplers:  NA #> Line length:  5e+06  (shared across strata) #> Design angle:  60 #> Edge protocol:  minus #>  #> Strata areas:   #> 4176461143, 8180996497, 6316380968, 8188111047, 2654685511, 9291229356 #> Region and effort units:  m #> Coverage Simulation repetitions:  5 #>  #>     Number of samplers: #>      #>         North   NW West Upper West Lower SW South Total #> Minimum    14 21.0       21.0       26.0 10  32.0 126.0 #> Mean       14 21.6       21.2       26.6 10  33.0 126.4 #> Median     14 22.0       21.0       27.0 10  33.0 126.0 #> Maximum    14 22.0       22.0       27.0 10  34.0 127.0 #> sd          0  0.5        0.4        0.5  0   0.7   0.5 #>  #>     Covered area: #>      #>              North         NW West Upper West Lower         SW      South #> Minimum 2988249491 6084430769 4450331963 6029503796 1797940847 6285161935 #> Mean    3022315232 6121980702 4497572103 6052222179 1839055802 6375231609 #> Median  3025693717 6135293401 4471216906 6030967541 1828217839 6381261519 #> Maximum 3055170362 6139856372 4579774745 6121954309 1883478705 6458582336 #> sd        24398171   23576303   52888664   39764063   38614055   68690900 #>               Total #> Minimum 27780426456 #> Mean    27908377627 #> Median  27894556275 #> Maximum 28046994710 #> sd        130454160 #>  #>     % of region covered: #>      #>         North    NW West Upper West Lower    SW South Total #> Minimum 71.55 74.37      70.46      73.64 67.73 67.65 71.58 #> Mean    72.37 74.83      71.20      73.91 69.28 68.62 71.91 #> Median  72.45 74.99      70.79      73.66 68.87 68.68 71.88 #> Maximum 73.15 75.05      72.51      74.77 70.95 69.51 72.27 #> sd       0.58  0.29       0.84       0.49  1.45  0.74  0.34 #>  #>     Line length: #>      #>            North         NW West Upper West Lower       SW      South #> Minimum 531609.5 1050941.25  793186.98 1042757.26 323819.0 1078399.38 #> Mean    537385.1 1054634.65  800583.08 1053356.92 342032.5 1096995.36 #> Median  538249.2 1055611.62  797866.41 1052249.52 347430.1 1097054.72 #> Maximum 540669.1 1059098.69  816492.72 1066183.25 354399.9 1110227.57 #> sd        3456.1    3276.52    9340.64    8357.94  13527.6   12957.62 #>              Total #> Minimum 4855108.18 #> Mean    4884987.56 #> Median  4883907.24 #> Maximum 4920365.76 #> sd        24887.93 #>  #>     Trackline length: #>      #>             North         NW West Upper West Lower        SW      South #> Minimum 778343.58 1382350.70  982026.33 1415867.22 472168.02 1318721.07 #> Mean    792583.79 1389594.73  998933.38 1446905.03 525065.95 1346036.58 #> Median  793983.57 1389486.38  998395.41 1452577.04 554892.10 1351142.50 #> Maximum 810093.81 1397647.08 1008384.50 1462220.74 559257.07 1368684.22 #> sd       12456.56    6914.25   10613.44   17972.18  44594.95   18352.19 #>              Total #> Minimum 6442715.71 #> Mean    6499119.45 #> Median  6485821.63 #> Maximum 6547325.23 #> sd        43485.69 #>  #>     Cyclic trackline length: #>      #>             North        NW West Upper West Lower        SW      South #> Minimum 880639.60 1538411.8 1139897.56 1614419.54 545899.45 1339090.29 #> Mean    894293.99 1550558.8 1158966.37 1648749.66 596319.90 1365065.63 #> Median  895134.89 1547497.5 1165490.91 1653087.69 624978.63 1365624.17 #> Maximum 912354.14 1562706.1 1166949.31 1667287.41 629151.76 1390014.59 #> sd       12379.18   10219.1   11529.26   20202.38  42782.13   18982.68 #>             Total #> Minimum 7153188.7 #> Mean    7213954.3 #> Median  7215589.2 #> Maximum 7253131.0 #> sd        41157.4 #>  #>     Coverage Score Summary: #>      #>             North        NW West Upper West Lower        SW     South     Total #> Minimum 0.0000000 0.2000000  0.2000000  0.0000000 0.2000000 0.2000000 0.0000000 #> Mean    0.7200000 0.7518519  0.7164557  0.7847619 0.7000000 0.6840336 0.7300000 #> Median  0.8000000 0.8000000  0.8000000  0.8000000 0.7000000 0.6000000 0.8000000 #> Maximum 1.0000000 1.0000000  1.2000000  1.0000000 1.0000000 1.2000000 1.2000000 #> sd      0.2946435 0.1614661  0.2388167  0.2397037 0.2160247 0.2277313 0.2292709 # Extract coverage scores for the first strata coverage.scores <- get.coverage(design, strata.id = 1) summary(coverage.scores) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    0.60    0.80    0.72    1.00    1.00  # }  # Fast running example for CRAN testing purposes # This spacing is too sparse to assess coverage in a real example and # the number of repetitions is too low to assess design statistics cover <- make.coverage(region,                        n.grid.points = 50) design <- make.design(region = region,                       transect.type = \"point\",                       design = \"random\",                       samplers = 25,                       design.angle = 45,                       edge.protocol = \"minus\",                       truncation = 3,                       coverage.grid = cover) survey <- generate.transects(design) plot(region, survey, covered.area = TRUE)  design <- run.coverage(design, reps = 3) #>    33.3% complete        #>    66.7% complete        #>    100% complete        plot(design)  design #>  #>    Strata North: #>    ______________ #> Design:  randomly located transects #> Number of samplers:  25  (shared across strata) #> Design angle:  45 #> Edge protocol:  minus #>  #>    Strata NW: #>    ___________ #> Design:  randomly located transects #> Number of samplers:  25  (shared across strata) #> Design angle:  45 #> Edge protocol:  minus #>  #>    Strata West Upper: #>    ___________________ #> Design:  randomly located transects #> Number of samplers:  25  (shared across strata) #> Design angle:  45 #> Edge protocol:  minus #>  #>    Strata West Lower: #>    ___________________ #> Design:  randomly located transects #> Number of samplers:  25  (shared across strata) #> Design angle:  45 #> Edge protocol:  minus #>  #>    Strata SW: #>    ___________ #> Design:  randomly located transects #> Number of samplers:  25  (shared across strata) #> Design angle:  45 #> Edge protocol:  minus #>  #>    Strata South: #>    ______________ #> Design:  randomly located transects #> Number of samplers:  25  (shared across strata) #> Design angle:  45 #> Edge protocol:  minus #>  #> Strata areas:   #> 4176461143, 8180996497, 6316380968, 8188111047, 2654685511, 9291229356 #> Region units:  m #> Coverage Simulation repetitions:  3 #>  #>     Number of samplers: #>      #>         North NW West Upper West Lower SW South Total #> Minimum     3  5          4          5  2     6    25 #> Mean        3  5          4          5  2     6    25 #> Median      3  5          4          5  2     6    25 #> Maximum     3  5          4          5  2     6    25 #> sd          0  0          0          0  0     0     0 #>  #>     Covered area: #>      #>         North     NW West Upper West Lower    SW  South  Total #> Minimum 84.78 141.31     113.05     141.31 56.52 169.57 706.54 #> Mean    84.78 141.31     113.05     141.31 56.52 169.57 706.54 #> Median  84.78 141.31     113.05     141.31 56.52 169.57 706.54 #> Maximum 84.78 141.31     113.05     141.31 56.52 169.57 706.54 #> sd       0.00   0.00       0.00       0.00  0.00   0.00   0.00 #>  #>     % of region covered: #>      #>         North NW West Upper West Lower SW South Total #> Minimum     0  0          0          0  0     0     0 #> Mean        0  0          0          0  0     0     0 #> Median      0  0          0          0  0     0     0 #> Maximum     0  0          0          0  0     0     0 #> sd          0  0          0          0  0     0     0 #>  #>     Coverage Score Summary: #>      #>         North NW West Upper West Lower SW South Total #> Minimum     0  0          0          0  0     0     0 #> Mean        0  0          0          0  0     0     0 #> Median      0  0          0          0  0     0     0 #> Maximum     0  0          0          0  0     0     0 #> sd          0  0          0          0  0     0     0"},{"path":"/reference/make.region.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Region object — make.region","title":"Creates a Region object — make.region","text":"creates instance Region class defines study area survey.","code":""},{"path":"/reference/make.region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Region object — make.region","text":"","code":"make.region(   region.name = \"region\",   strata.name = character(0),   units = character(0),   shape = NULL,   dist.for.win = FALSE )"},{"path":"/reference/make.region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Region object — make.region","text":"region.name region name strata.name strata names (character vector, length number areas shapefile / sf object). supplied \"\", \"B\", \"C\", ... assigned. strata names provided order appear shapefile. See details. units measurement units; either \"m\" metres \"km\" kilometres. shapefile projection file associated units taken . shape shapefile path .shp file sf object class sf, sfc sfg. dist..win logical indicating region created via Distance Windows (default = FALSE). See details.","code":""},{"path":"/reference/make.region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Region object — make.region","text":"object class Region","code":""},{"path":"/reference/make.region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a Region object — make.region","text":"strata names provided order strata presented shapefile sf shape object. can simply checked creating region plotting checking key correctly identifies strata. Note order Distance Windows displays strata sometimes differs order stored shapefile. running Distance Windows checked match warning displayed saying re-ordered.","code":""},{"path":"/reference/make.region.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a Region object — make.region","text":"Laura Marshall","code":""},{"path":"/reference/make.region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Region object — make.region","text":"","code":"# A basic study rectangular study region region <- make.region() plot(region)   #Load the region from a projected shapefile shapefile.name <- system.file(\"extdata\", \"TrackExample.shp\", package = \"dssd\") region <- make.region(region.name = \"study area\",                       shape = shapefile.name) plot(region)   #Load a multi strata unprojected shapefile shapefile.name <- system.file(\"extdata\", \"AreaRStrata.shp\", package = \"dssd\") # Need to load shapefile first as it is not projected sf.shape <- sf::read_sf(shapefile.name) # Check current coordinate reference system sf::st_crs(sf.shape) #> Coordinate Reference System: #>   User input: WGS 84  #>   wkt: #> GEOGCRS[\"WGS 84\", #>     DATUM[\"World Geodetic System 1984\", #>         ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>             LENGTHUNIT[\"metre\",1]]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433]], #>     CS[ellipsoidal,2], #>         AXIS[\"latitude\",north, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>         AXIS[\"longitude\",east, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>     ID[\"EPSG\",4326]] # Define a European Albers Equal Area projection proj4string <- \"+proj=aea +lat_1=43 +lat_2=62 +lat_0=30 +lon_0=-9 +x_0=0 +                 y_0=0 +ellps=intl +units=km\" # Project the study area on to a flat plane projected.shape <- sf::st_transform(sf.shape, crs = proj4string) # Create region with default strata names region <- make.region(region.name = \"study area\",                       shape = projected.shape) #> Warning: Automatically naming strata as no (or incorrect number of) strata names provided. Assigned strata names: A, B, C, D, E, F # By plotting the region we can verify the order of the strata plot(region)"},{"path":"/reference/plot.Coverage.Grid-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,Coverage.Grid,ANY-method","title":"Plot — plot,Coverage.Grid,ANY-method","text":"Plots S4 object class 'Coverage.Grid'","code":""},{"path":"/reference/plot.Coverage.Grid-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,Coverage.Grid,ANY-method","text":"","code":"# S4 method for class 'Coverage.Grid,ANY' plot(x, y, ...)"},{"path":"/reference/plot.Coverage.Grid-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,Coverage.Grid,ANY-method","text":"x object class Coverage.Grid y used ... general plot parameters including: add TRUE / FALSE, col colour grid points pch grid point symbols.","code":""},{"path":"/reference/plot.Region-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,Region,ANY-method","title":"Plot — plot,Region,ANY-method","text":"Plot's object class Region optionally set transects points coverage grid supplied y argument.","code":""},{"path":"/reference/plot.Region-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,Region,ANY-method","text":"","code":"# S4 method for class 'Region,ANY' plot(   x,   y,   main = \"\",   region.col = \"default\",   strata = \"all\",   line.col = gray(0.2),   legend.params = list() )  # S4 method for class 'Region,Transect' plot(   x,   y,   main = \"\",   region.col = \"default\",   strata = \"all\",   line.col = gray(0.2),   col = \"blue\",   lwd = 1,   covered.area = FALSE,   legend.params = list() )  # S4 method for class 'Region,Coverage.Grid' plot(   x,   y,   main = \"\",   region.col = \"default\",   strata = \"all\",   line.col = gray(0.2),   col = \"black\",   cex = 1 )"},{"path":"/reference/plot.Region-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,Region,ANY-method","text":"x object class Region inheriting Survey y object inheriting class Transect object class Coverage.Grid main main title plot region.col colours strata strata strata name number plotted. default strata plotted. line.col sets line colour lines around survey region. legend.params deprecated since implementation ggplot2 col sets colour transects / coverage grid points lwd sets line width transects covered.area boolean value saying whether covered area plotted. cex affects size point coverage grid","code":""},{"path":"/reference/plot.Region-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot — plot,Region,ANY-method","text":"returns ggplot object","code":""},{"path":"/reference/plot.Survey.Design-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,Survey.Design,ANY-method","title":"Plot — plot,Survey.Design,ANY-method","text":"Plots coverage scores contained within object class 'Survey.Design' provides colour key relating coverage scores. allows user assess even coverage across survey region.","code":""},{"path":"/reference/plot.Survey.Design-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,Survey.Design,ANY-method","text":"","code":"# S4 method for class 'Survey.Design,ANY' plot(x, y, strata.id = numeric(0), col.breaks = NULL, subtitle = \"\", ...)"},{"path":"/reference/plot.Survey.Design-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,Survey.Design,ANY-method","text":"x object class Survey.Design y used strata.id numeric value indicating index strata wish plot. col.breaks number break point colour scale representing coverage scores. subtitle subtitle plot. ... implemented class.","code":""},{"path":"/reference/plot.Transect-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,Line.Transect,ANY-method","title":"Plot — plot,Line.Transect,ANY-method","text":"Plots S4 object class 'Transect'","code":""},{"path":"/reference/plot.Transect-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,Line.Transect,ANY-method","text":"","code":"# S4 method for class 'Line.Transect,ANY' plot(x, y, ...)  # S4 method for class 'Point.Transect,ANY' plot(x, y, ...)"},{"path":"/reference/plot.Transect-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,Line.Transect,ANY-method","text":"x object class transect y used ... Additional arguments: add (TRUE/FALSE) whether add existing plot, col colour, lwd line width (line transects) pch point symbols (point transects).","code":""},{"path":"/reference/Point.Transect-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Virtual Class \"Point.Transect\" S4 class detailing set transects point transect design.","code":""},{"path":[]},{"path":"/reference/Point.Transect.Design-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual Class ","title":"Virtual Class ","text":"Virtual Class \"Point.Transect.Design\" S4 class detailing type point transect design.","code":""},{"path":"/reference/Point.Transect.Design-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Virtual Class ","text":"generate.transects signature=(object = \"Point.Transect.Design\", quiet = FALSE,  ...):  generates set transects design.","code":""},{"path":[]},{"path":"/reference/Region-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Region\" S4 class containing descriptions study area. Uses object class","code":""},{"path":"/reference/Region-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"region.name Object class \"character\"; giving name region. strata.name Object class \"character\"; character vector giving names strata. units Object class \"character\"; character describing coordinate units (\"km\" \"m\") area Object class \"numeric\"; area survey region region Object class \"sf\" defining survey region","code":""},{"path":"/reference/Region-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form make.region(region.name = \"region.name\", shapefile = region.shapefile)","code":""},{"path":"/reference/Region-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"get.area signature(obj = \"Region\"): retrieves area  element plot signature(x = \"Region\", y = \"missing\"): plots  survey region defined object.","code":""},{"path":[]},{"path":"/reference/run.coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"run.coverage — run.coverage","title":"run.coverage — run.coverage","text":"function can used assess coverage design also assess design statistics, number samplers, line length, trackline length percentage coverage varies surveys generated design. generates specified number surveys design looks see coverage grid points, systematic grid points across survey region, included survey. calculating coverage scores one sampler falls grid point grid point gets allocated appropriate count. counts averaged number surveys generated. time records relevant statistics design. 100 repetitions may sufficient get idea design statistics 1000 even repetitions may needed gain good representation coverage scores across study region.","code":""},{"path":"/reference/run.coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run.coverage — run.coverage","text":"","code":"run.coverage(design, reps = 10, save.transects = \"\", quiet = FALSE)"},{"path":"/reference/run.coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run.coverage — run.coverage","text":"design object inherits Survey.Design class. reps number times wish coverage simulation carried . save.transects directory shapefiles transects can saved. shapefile names S1, S2, ... existing files directory overwritten. quiet TRUE progress counter displayed.","code":""},{"path":"/reference/run.coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run.coverage — run.coverage","text":"function returns survey design object passed now include coverage design statistics.","code":""},{"path":"/reference/run.coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"run.coverage — run.coverage","text":"See ?make.design example code.","code":""},{"path":[]},{"path":"/reference/Segment.Transect-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Segment.Transect\" S4 class detailing set transects point transect design.","code":""},{"path":"/reference/Segment.Transect-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"seg.length length transect segment. seg.threshold percentage threshold value applicable segmented grid designs controlling partial segments discarded around survey region boundary. default, value 50, means segments half inside survey region retained. retain segments, matter small clipped survey region boundary set value 0. offset value offset return transect segments become pairs segments (yet implemented).","code":""},{"path":[]},{"path":"/reference/Segment.Transect.Design-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Segment.Transect.Design\" S4 class detailing segmented line transect design.","code":""},{"path":"/reference/Segment.Transect.Design-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"seg.length length transect segment. seg.threshold percentage threshold value applicable segmented grid designs controlling partial segments discarded around survey region boundary. default, value 50, means segments half inside survey region retained. retain segments, matter small clipped survey region boundary set value 0. offset value offset return transect segments become pairs segments (yet implemented).","code":""},{"path":"/reference/Segment.Transect.Design-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"generate.transects signature=(object = \"Line.Transect.Design\", quiet = FALSE, ...):  generates set transects design.","code":""},{"path":[]},{"path":"/reference/show.Survey.Design-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"show — show,Survey.Design-method","title":"show — show,Survey.Design-method","text":"Summarises displays S4 object class 'Survey.Design'","code":""},{"path":"/reference/show.Survey.Design-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show — show,Survey.Design-method","text":"","code":"# S4 method for class 'Survey.Design' show(object)"},{"path":"/reference/show.Survey.Design-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show — show,Survey.Design-method","text":"object object inherits Survey.Design class","code":""},{"path":"/reference/show.Transect-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Show — show,Line.Transect-method","title":"Show — show,Line.Transect-method","text":"Displays details S4 object class 'Transect' Displays details S4 object class 'Transect'","code":""},{"path":"/reference/show.Transect-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show — show,Line.Transect-method","text":"","code":"# S4 method for class 'Line.Transect' show(object)  # S4 method for class 'Point.Transect' show(object)"},{"path":"/reference/show.Transect-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show — show,Line.Transect-method","text":"object object class Transect","code":""},{"path":"/reference/Survey.Design-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual Class ","title":"Virtual Class ","text":"Virtual Class \"Survey.Design\" S4 class detailing survey design.","code":""},{"path":"/reference/Survey.Design-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Virtual Class ","text":"region object class 'Region' defining study area. design Character value describing name design. samplers Numeric values defining number samplers stratum. effort.allocation numeric values used indicate proportion effort allocated strata number samplers line length. length 0, effort allocated based stratum area. spacing used systematic designs, numeric value define spacing transects. design.angle numeric value detailing angle design. Can provide multiple values relating strata. use angle varies design, can either angle grid points, angle lines design axis zigzag design. edge.protocol Character value defining whether \"minus\" \"plus\" sampling strategy used. truncation Object class \"numeric\"; maximum distance observations can made. used determine covered area coverage calculations. coverage.grid coverage grid used assess uniformity coverage simulations. coverage.scores average number times point coverage grid included survey. coverage.reps number times coverage simulation repeated. design.statistics list values obtained investigating coverage. includes minimum, maximum, mean median","code":""},{"path":"/reference/Survey.Design-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Virtual Class ","text":"generate.transects signature 'Survey.Design':  Generates set transects design. plot signature 'Survey.Design,':  Plots coverage scores contained within object class 'Survey.Design'  provides colour key relating coverage scores. allows user  assess even coverage across survey region. show signature 'Survey.Design':  Gives summary design description, stratum areas coverage scores  coverage simulation run design. coverage score summary  details minimum, maximum, mean medium coverage scores across study  region. Also gives summaries design measures number  samplers, line length, trackline length, cyclic trackline length, covered area  percentage region covered.","code":""},{"path":[]},{"path":"/reference/Transect-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 Class ","title":"S4 Class ","text":"Virtual Class \"Transect\"","code":""},{"path":"/reference/Transect-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"S4 Class ","text":"Virtual Class \"Transect\" S4 class detailing single survey, single set transects.","code":""},{"path":"/reference/Transect-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 Class ","text":"strata.names character vector strata names design Describes design algorithm used create survey. samplers Contains survey transects strata.area areas strata design cov.area total areas sampled within strata. Areas sampled twice counted twice. cov.area.polys polygons representing covered area survey. samp.count Numeric value(s) giving number realised transects. effort.allocation vector probabilities determining effort allocated strata. Effort allocated based area left empty. spacing determines spacing systematic samplers design.angle numeric value detailing angle design. Can provide multiple values relating strata. use angle varies design, can either angle grid points, angle lines design axis zigzag design. edge.protocol character value indicating whether \"plus\" sampling \"minus\" sampling protocol used.","code":""},{"path":[]},{"path":"/reference/write.transects.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes transects to file — write.transects","title":"Writes transects to file — write.transects","text":"function write set transects file, either shapefile gpx file, write transect coordinates (centre points point transects end points line transects) comma-separated values 'csv' file text file 'txt' tabular spacing columns. line transects split across geographical features (islands lakes) two rows csv / txt file rows transect ID.","code":""},{"path":"/reference/write.transects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes transects to file — write.transects","text":"","code":"write.transects(   object,   dsn,   layer = NULL,   dataset.options = character(0),   overwrite = FALSE,   proj4string = character(0) )"},{"path":"/reference/write.transects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes transects to file — write.transects","text":"object object inheriting class Transect. Alternatively, file types except gpx sf spatial object can supplied. dsn data source name, currently filename 'shp' 'csv', 'txt' 'gpx' extension. layer character vector specifying layer name, required gpx files. dataset.options character vector options, vary driver, treated experimental. Used specify \"GPX_USE_EXTENSIONS=yes\" writing gpx files. overwrite whether existing files overwritten. applicable writing gpx files. proj4string projection wish coordinates output file . Note, writing gpx file transect coordinates must latitude longitude.","code":""},{"path":"/reference/write.transects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes transects to file — write.transects","text":"invisibly Transect object","code":""},{"path":"/reference/write.transects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Writes transects to file — write.transects","text":"write transects file usually dsn needed 'shp', 'csv' 'txt' file extension. write gpx file need specify dsn projection allow coordinates transformed. back latitude longitude.","code":""},{"path":"/reference/write.transects.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Writes transects to file — write.transects","text":"Laura Marshall","code":""},{"path":"/reference/write.transects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes transects to file — write.transects","text":"","code":"# Note that for CRAN testing purposes all files written in example code must # be written to a temporary directory, to view this location type tempdir(). # It is however advised that you replace the tempdir() commands in the code # below to a more easily accessible directory to which the files will be # written.  # Make the default design in the default study area design <- make.design() transects <- generate.transects(design) write.transects(transects, dsn = paste0(tempdir(), \"/\", \"transects.shp\")) #> writing: substituting ENGCRS[\"Undefined Cartesian SRS with unknown unit\"] for missing CRS #> Writing layer `transects' to data source  #>   `C:\\Users\\erexs\\AppData\\Local\\Temp\\Rtmpa4NMsG/transects.shp' using driver `ESRI Shapefile' #> Writing 20 features with 2 fields and geometry type Line String.  # Writing csv file example write.transects(transects, dsn = paste0(tempdir(), \"/\", \"transects.csv\"))  # Writing txt file example write.transects(transects, dsn = paste0(tempdir(), \"/\", \"transects.txt\"))  # Writing gpx file example - must project transect coords into lat/lon #Load the unprojected shapefile shapefile.name <- system.file(\"extdata\", \"TentsmuirUnproj.shp\", package = \"dssd\") sf.shape <- sf::read_sf(shapefile.name) # Check current coordinate reference system orig.crs <- sf::st_crs(sf.shape) # Define a European Albers Equal Area projection proj4string <- \"+proj=aea +lat_1=56 +lat_2=62 +lat_0=50 +lon_0=-3 +x_0=0                 +y_0=0 +ellps=intl +units=m\" # Project the study area on to a flat plane projected.shape <- sf::st_transform(sf.shape, crs = proj4string) # Create the survey region in dssd region.tm <- make.region(region.name = \"Tentsmuir\",                          strata.name = c(\"Main Area\", \"Morton Lochs\"),                          shape = projected.shape)  design <- make.design(region = region.tm,                       transect.type = \"line\",                       design = \"systematic\",                       samplers = 20,                       design.angle = 90) survey <- generate.transects(design) plot(region.tm, survey)   write.transects(survey,                 dsn = paste0(tempdir(), \"/\", \"transects.gpx\"),                 layer = \"lines\",                 proj4string = orig.crs) #> Writing layer `lines' to data source  #>   `C:\\Users\\erexs\\AppData\\Local\\Temp\\Rtmpa4NMsG/transects.gpx' using driver `GPX' #> Writing 19 features with 0 fields and geometry type Multi Line String."},{"path":"/news/index.html","id":"dssd-103","dir":"Changelog","previous_headings":"","what":"dssd 1.0.3","title":"dssd 1.0.3","text":"CRAN release: 2025-04-22 Enhancements Updated web site links","code":""},{"path":"/news/index.html","id":"dssd-102","dir":"Changelog","previous_headings":"","what":"dssd 1.0.2","title":"dssd 1.0.2","text":"CRAN release: 2023-11-17 Bug Fixes Fixed Atlas bug setting precision Atlas environment invalid shapes detected. Enhancements Enhanced message regarding strata names provided match number strata.","code":""},{"path":"/news/index.html","id":"dssd-101","dir":"Changelog","previous_headings":"","what":"dssd 1.0.1","title":"dssd 1.0.1","text":"Bug Fixes Removed dependence rgdal","code":""},{"path":"/news/index.html","id":"dssd-100","dir":"Changelog","previous_headings":"","what":"dssd 1.0.0","title":"dssd 1.0.0","text":"CRAN release: 2022-10-04 Bug Fixes Now accepts XYZ XYM polygons (Z M information removed region created)","code":""},{"path":"/news/index.html","id":"dssd-034","dir":"Changelog","previous_headings":"","what":"dssd 0.3.4","title":"dssd 0.3.4","text":"CRAN release: 2022-08-30 Enhancements Can store design parameters associated segmented trackline design use Distance Windows (generate transects design within dssd) Now checks shapefiles LinkID ordering used Distance Windows","code":""},{"path":"/news/index.html","id":"dssd-033","dir":"Changelog","previous_headings":"","what":"dssd 0.3.3","title":"dssd 0.3.3","text":"CRAN release: 2022-06-14 Enhancements Minor change retain CRAN pass noLD testing","code":""},{"path":"/news/index.html","id":"dssd-032","dir":"Changelog","previous_headings":"","what":"dssd 0.3.2","title":"dssd 0.3.2","text":"CRAN release: 2022-06-01 Enhancements Changed default truncation distance 50 Remove dependency 3Dplot (therefore tcltk package) Minor code changes inline CRAN coding policies","code":""},{"path":"/news/index.html","id":"dssd-031","dir":"Changelog","previous_headings":"","what":"dssd 0.3.1","title":"dssd 0.3.1","text":"CRAN release: 2021-09-01 Bug Fixes Minor fix dssd erroneously displaying warning possible unequal coverage total number samplers supplied. always applicable.","code":""},{"path":"/news/index.html","id":"dssd-030","dir":"Changelog","previous_headings":"","what":"dssd 0.3.0","title":"dssd 0.3.0","text":"CRAN release: 2021-07-30 New Features calculate.effort: calculates estimated effort required main survey achieve given CV based information pilot survey. Improved plotting using ggplot2. Added example export transects Getting Started vignette. Improved effort allocation documentation. Bug Fixes Clarified documentation via warnings error messages confusion specification designs. Fixed effort allocation mix random systematic point transect designs design parameter supplied total number samplers. Fixed effort allocation rounding total number samplers supplied line transect designs. Previously wasn’t rounded automatically used floor value results less transects requested. Fixed segmented transect bug generated error segment id’s sequential (sometimes happens clipping retaining transects)","code":""},{"path":"/news/index.html","id":"dssd-022","dir":"Changelog","previous_headings":"","what":"dssd 0.2.2","title":"dssd 0.2.2","text":"CRAN release: 2021-02-25 Exports region class required dsims","code":""},{"path":"/news/index.html","id":"dssd-021","dir":"Changelog","previous_headings":"","what":"dssd 0.2.1","title":"dssd 0.2.1","text":"CRAN release: 2020-02-20 Bug Fixes Minor documentation import changes pass CRAN checks","code":""},{"path":"/news/index.html","id":"dssd-020","dir":"Changelog","previous_headings":"","what":"dssd 0.2.0","title":"dssd 0.2.0","text":"CRAN release: 2020-01-15 New Features Segmented grid design Writes transects gpx, csv txt file Multi-strata vignette Coverage score statistics stratum Option run coverage simulation without progress counter output Plot access coverage scores stratum Use -1 set randomly generated design angle Updated Documentation Bug Fixes Coordinate reference systems now stored coverage transect objects Fixed invalid shapefiles: AreaRStrata AreaRProjStrata","code":""},{"path":"/news/index.html","id":"dssd-010","dir":"Changelog","previous_headings":"","what":"dssd 0.1.0","title":"dssd 0.1.0","text":"CRAN release: 2019-08-05 Enhancements Introducing new Distance Sampling Survey Design package! provide number survey design options allow generate transects distance sampling surveys. Point transects: Simple random sampling Point transects: Systematic grid random start point Line transects: Parallel random lines Line transects: Systematic parallel lines random start Line transects: Equal spaced zigzags random start Line transects: Equal spaced zigzags complementary set zigzags Ability vary design angle Survey generation number samplers, spacing line length (can generate different criteria strata) Ability use different designs strata (long type, .e. point line transects) Generate plus minus sampling surveys Generate zigzag design inside minimum bounding rectangles (angled along design axis) convex hulls Calculates coverage different design simulation Produces summary statistics coverage design showing variability number samplers, line length, % coverage across surveys given design","code":""}]
